//package com.book.unit;//////import com.book.converter.PersonDtoConverter;//import com.book.dto.ApartmentDto;//import com.book.dto.PhoneNumberDto;//import com.book.model.Agent;//import org.junit.Test;//import org.mockito.InjectMocks;//import org.mockito.Mock;////import static org.junit.Assert.assertEquals;//import static org.mockito.Matchers.any;//import static org.mockito.Mockito.verify;//import static org.mockito.internal.verification.VerificationModeFactory.times;////public class AgentDtoConverterTest extends OlxParserTest {//    @InjectMocks//    private PersonDtoConverter personConverter;//    @Mock//    private PhoneNumberDtoConverter numberDtoConverter;////    @Test//    public void forthConverter() {//        ApartmentDto dto = personConverter.doForward(createPersonWithPhoneNumber(NAME, PHONE_NUMBER));////        assertEquals(NAME, dto.getName());//        assertEquals(ID, dto.getId());////        verify(numberDtoConverter, times(1)).doForward(any(PhoneNumber.class));//    }////    @Test//    public void forthConverterInCasePersonNotContainsPhoneNumber() {//        ApartmentDto dto = personConverter.doForward(createPerson(NAME));////        assertEquals(NAME, dto.getName());//        assertEquals(ID, dto.getId());////        verify(numberDtoConverter, times(0)).doForward(any(PhoneNumber.class));//    }////    @Test//    public void backConverter() {//        Agent agent = personConverter.doBackward(createPersonDtoWithPhoneNumberDto(NAME));////        assertEquals(NAME, agent.getName());//        assertEquals(ID, agent.getId());////        verify(numberDtoConverter, times(1)).doBackward(any(PhoneNumberDto.class));//    }////    @Test//    public void backConverterInCasePersonDtoNotContainsPhoneNumber() {//        Agent agent = personConverter.doBackward(createPersonDto(NAME));////        assertEquals(NAME, agent.getName());//        assertEquals(ID, agent.getId());//        verify(numberDtoConverter, times(0)).doBackward(any(PhoneNumberDto.class));//    }//}